{
  "title": "OKIT OCI Visualiser Json",
  "description": "OKIT Generic OCI Json which can be used to generate ansible, terraform, .......",
  "okit_version": "0.9.0",
  "compartments": [
    {
      "id": "okit.compartment.87b90aa7-4c56-4800-b4d7-e404b89c6ceb",
      "freeform_tags": {},
      "defined_tags": {},
      "compartment_id": null,
      "name": "okit-comp001",
      "display_name": "okit-comp001"
    }
  ],
  "autonomous_databases": [],
  "block_storage_volumes": [],
  "containers": [],
  "database_systems": [],
  "dynamic_routing_gateways": [],
  "fast_connects": [],
  "file_storage_systems": [],
  "instances": [
    {
      "id": "okit.undefined.db39f276-9616-47db-8008-d7510e65a41e",
      "freeform_tags": {},
      "defined_tags": {},
      "display_name": "nginx-server-01",
      "availability_domain": "1",
      "compartment_id": "okit.compartment.87b90aa7-4c56-4800-b4d7-e404b89c6ceb",
      "shape": "VM.Standard2.1",
      "fault_domain": "",
      "agent_config": {
        "is_monitoring_disabled": false,
        "is_management_disabled": false
      },
      "vnics": [
        {
          "subnet_id": "okit.undefined.d3967bc6-40e8-42d3-adaf-9c5f374bca0b",
          "hostname_label": "nginx001",
          "assign_public_ip": true,
          "skip_source_dest_check": false,
          "nsg_ids": []
        }
      ],
      "source_details": {
        "os": "Oracle Linux",
        "version": "",
        "boot_volume_size_in_gbs": "50",
        "source_type": "image"
      },
      "metadata": {
        "ssh_authorized_keys": "",
        "user_data": "#cloud-config\npackages:\n  - nginx\n  - oci-utils\n  - python36\n  - python-oci-cli\n\nwrite_files:\n  # Add aliases to bash (Note: At time of writing the append flag does not appear to be working)\n  - path: /etc/.bashrc\n    append: true\n    content: |\n      alias lh='ls -lash'\n      alias lt='ls -last'\n      alias env='/usr/bin/env | sort'\n      alias whatsmyip='curl -X GET https://www.whatismyip.net | grep ipaddress'\n  # Create nginx index.html\n  - path: /usr/share/nginx/html/index1.html\n    permissions: '0644'\n    content: |\n      <html>\n      <head>\n      <title>OCI Loadbalancer backend {hostname}</title>\n      <meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" />\n      <meta http-equiv=\"refresh\" content=\"10\" />\n      <style>\n      body {\n      background-image: url(\"bg.jpg\");\n      background-repeat: no-repeat;\n      background-size: contain;\n      background-position: center;\n      }\n      h1 {\n      text-align: center;\n      width: 100%;\n      }\n      </style>\n      </head>\n      <body>\n      <h1>OCI Regional Subnet Loadbalancer Backend {hostname}</h1>\n      </body>\n      </html>\n\nruncmd:\n  # Enable nginx\n  - sudo systemctl enable nginx.service\n  - sudo cp -v /usr/share/nginx/html/index1.html /usr/share/nginx/html/index.html\n  - sudo sed -i \"s/{hostname}/$(hostname)/g\" /usr/share/nginx/html/index.html\n  - sudo systemctl start nginx.service\n  # Set Firewall Rules\n  - sudo firewall-offline-cmd  --add-port=80/tcp\n  - sudo systemctl restart firewalld\n  # Add additional environment information because append does not appear to work in write_file\n  - sudo bash -c \"echo 'source /etc/.bashrc' >> /etc/bashrc\"\n\nfinal_message: \"**** The system is finally up, after $UPTIME seconds ****\"\n"
      },
      "block_storage_volume_ids": [],
      "object_storage_bucket_ids": [],
      "autonomous_database_ids": [],
      "preserve_boot_volume": false,
      "is_pv_encryption_in_transit_enabled": false,
      "subnet": "okit-sn001",
      "block_storage_volumes": [],
      "virtual_cloud_network": "okit-sn001",
      "primary_vnic": {
        "subnet_id": "okit.undefined.d3967bc6-40e8-42d3-adaf-9c5f374bca0b",
        "hostname_label": "nginx001",
        "assign_public_ip": true,
        "skip_source_dest_check": false,
        "nsg_ids": []
      },
      "name": "nginx-server-01"
    },
    {
      "id": "okit.undefined.00e1e3e6-edf0-4102-ab24-8a47e749c5ea",
      "freeform_tags": {},
      "defined_tags": {},
      "display_name": "nginx-server-02",
      "availability_domain": "1",
      "compartment_id": "okit.compartment.87b90aa7-4c56-4800-b4d7-e404b89c6ceb",
      "shape": "VM.Standard.E2.1",
      "fault_domain": "",
      "agent_config": {
        "is_monitoring_disabled": false,
        "is_management_disabled": false
      },
      "vnics": [
        {
          "subnet_id": "okit.undefined.d3967bc6-40e8-42d3-adaf-9c5f374bca0b",
          "hostname_label": "nginx002",
          "assign_public_ip": true,
          "skip_source_dest_check": false,
          "nsg_ids": []
        }
      ],
      "source_details": {
        "os": "Oracle Linux",
        "version": "",
        "boot_volume_size_in_gbs": "50",
        "source_type": "image"
      },
      "metadata": {
        "ssh_authorized_keys": "",
        "user_data": "#cloud-config\npackages:\n  - nginx\n  - oci-utils\n  - python36\n  - python-oci-cli\n\nwrite_files:\n  # Add aliases to bash (Note: At time of writing the append flag does not appear to be working)\n  - path: /etc/.bashrc\n    append: true\n    content: |\n      alias lh='ls -lash'\n      alias lt='ls -last'\n      alias env='/usr/bin/env | sort'\n      alias whatsmyip='curl -X GET https://www.whatismyip.net | grep ipaddress'\n  # Create nginx index.html\n  - path: /usr/share/nginx/html/index1.html\n    permissions: '0644'\n    content: |\n      <html>\n      <head>\n      <title>OCI Loadbalancer backend {hostname}</title>\n      <meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" />\n      <meta http-equiv=\"refresh\" content=\"10\" />\n      <style>\n      body {\n      background-image: url(\"bg.jpg\");\n      background-repeat: no-repeat;\n      background-size: contain;\n      background-position: center;\n      }\n      h1 {\n      text-align: center;\n      width: 100%;\n      }\n      </style>\n      </head>\n      <body>\n      <h1>OCI Regional Subnet Loadbalancer Backend {hostname}</h1>\n      </body>\n      </html>\n\nruncmd:\n  # Enable nginx\n  - sudo systemctl enable nginx.service\n  - sudo cp -v /usr/share/nginx/html/index1.html /usr/share/nginx/html/index.html\n  - sudo sed -i \"s/{hostname}/$(hostname)/g\" /usr/share/nginx/html/index.html\n  - sudo systemctl start nginx.service\n  # Set Firewall Rules\n  - sudo firewall-offline-cmd  --add-port=80/tcp\n  - sudo systemctl restart firewalld\n  # Add additional environment information because append does not appear to work in write_file\n  - sudo bash -c \"echo 'source /etc/.bashrc' >> /etc/bashrc\"\n\nfinal_message: \"**** The system is finally up, after $UPTIME seconds ****\"\n"
      },
      "block_storage_volume_ids": [],
      "object_storage_bucket_ids": [],
      "autonomous_database_ids": [],
      "preserve_boot_volume": false,
      "is_pv_encryption_in_transit_enabled": false,
      "subnet": "okit-sn001",
      "block_storage_volumes": [],
      "virtual_cloud_network": "okit-sn001",
      "primary_vnic": {
        "subnet_id": "okit.undefined.d3967bc6-40e8-42d3-adaf-9c5f374bca0b",
        "hostname_label": "nginx002",
        "assign_public_ip": true,
        "skip_source_dest_check": false,
        "nsg_ids": []
      },
      "name": "nginx-server-02"
    },
    {
      "id": "okit.undefined.933abf36-5c79-44b8-9b5a-d2f544b7d9f4",
      "freeform_tags": {},
      "defined_tags": {},
      "display_name": "nginx-server-03",
      "availability_domain": "1",
      "compartment_id": "okit.compartment.87b90aa7-4c56-4800-b4d7-e404b89c6ceb",
      "shape": "VM.Standard.E2.1",
      "fault_domain": "",
      "agent_config": {
        "is_monitoring_disabled": false,
        "is_management_disabled": false
      },
      "vnics": [
        {
          "subnet_id": "okit.undefined.d3967bc6-40e8-42d3-adaf-9c5f374bca0b",
          "hostname_label": "nginx003",
          "assign_public_ip": true,
          "skip_source_dest_check": false,
          "nsg_ids": []
        }
      ],
      "source_details": {
        "os": "Oracle Linux",
        "version": "",
        "boot_volume_size_in_gbs": "50",
        "source_type": "image"
      },
      "metadata": {
        "ssh_authorized_keys": "",
        "user_data": "#cloud-config\npackages:\n  - nginx\n  - oci-utils\n  - python36\n  - python-oci-cli\n\nwrite_files:\n  # Add aliases to bash (Note: At time of writing the append flag does not appear to be working)\n  - path: /etc/.bashrc\n    append: true\n    content: |\n      alias lh='ls -lash'\n      alias lt='ls -last'\n      alias env='/usr/bin/env | sort'\n      alias whatsmyip='curl -X GET https://www.whatismyip.net | grep ipaddress'\n  # Create nginx index.html\n  - path: /usr/share/nginx/html/index1.html\n    permissions: '0644'\n    content: |\n      <html>\n      <head>\n      <title>OCI Loadbalancer backend {hostname}</title>\n      <meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" />\n      <meta http-equiv=\"refresh\" content=\"10\" />\n      <style>\n      body {\n      background-image: url(\"bg.jpg\");\n      background-repeat: no-repeat;\n      background-size: contain;\n      background-position: center;\n      }\n      h1 {\n      text-align: center;\n      width: 100%;\n      }\n      </style>\n      </head>\n      <body>\n      <h1>OCI Regional Subnet Loadbalancer Backend {hostname}</h1>\n      </body>\n      </html>\n\nruncmd:\n  # Enable nginx\n  - sudo systemctl enable nginx.service\n  - sudo cp -v /usr/share/nginx/html/index1.html /usr/share/nginx/html/index.html\n  - sudo sed -i \"s/{hostname}/$(hostname)/g\" /usr/share/nginx/html/index.html\n  - sudo systemctl start nginx.service\n  # Set Firewall Rules\n  - sudo firewall-offline-cmd  --add-port=80/tcp\n  - sudo systemctl restart firewalld\n  # Add additional environment information because append does not appear to work in write_file\n  - sudo bash -c \"echo 'source /etc/.bashrc' >> /etc/bashrc\"\n\nfinal_message: \"**** The system is finally up, after $UPTIME seconds ****\"\n"
      },
      "block_storage_volume_ids": [],
      "object_storage_bucket_ids": [],
      "autonomous_database_ids": [],
      "preserve_boot_volume": false,
      "is_pv_encryption_in_transit_enabled": false,
      "subnet": "okit-sn001",
      "block_storage_volumes": [],
      "virtual_cloud_network": "okit-sn001",
      "primary_vnic": {
        "subnet_id": "okit.undefined.d3967bc6-40e8-42d3-adaf-9c5f374bca0b",
        "hostname_label": "nginx003",
        "assign_public_ip": true,
        "skip_source_dest_check": false,
        "nsg_ids": []
      },
      "name": "nginx-server-03"
    },
    {
      "id": "okit.undefined.6152088d-4dbb-4d52-bf7c-9c0a2efb5f5d",
      "freeform_tags": {},
      "defined_tags": {},
      "display_name": "nginx-server-04",
      "availability_domain": "1",
      "compartment_id": "okit.compartment.87b90aa7-4c56-4800-b4d7-e404b89c6ceb",
      "shape": "VM.Standard.E2.1",
      "fault_domain": "",
      "agent_config": {
        "is_monitoring_disabled": false,
        "is_management_disabled": false
      },
      "vnics": [
        {
          "subnet_id": "okit.undefined.d3967bc6-40e8-42d3-adaf-9c5f374bca0b",
          "hostname_label": "nginx004",
          "assign_public_ip": true,
          "skip_source_dest_check": false,
          "nsg_ids": []
        }
      ],
      "source_details": {
        "os": "Oracle Linux",
        "version": "",
        "boot_volume_size_in_gbs": "50",
        "source_type": "image"
      },
      "metadata": {
        "ssh_authorized_keys": "",
        "user_data": "#cloud-config\npackages:\n  - nginx\n  - oci-utils\n  - python36\n  - python-oci-cli\n\nwrite_files:\n  # Add aliases to bash (Note: At time of writing the append flag does not appear to be working)\n  - path: /etc/.bashrc\n    append: true\n    content: |\n      alias lh='ls -lash'\n      alias lt='ls -last'\n      alias env='/usr/bin/env | sort'\n      alias whatsmyip='curl -X GET https://www.whatismyip.net | grep ipaddress'\n  # Create nginx index.html\n  - path: /usr/share/nginx/html/index1.html\n    permissions: '0644'\n    content: |\n      <html>\n      <head>\n      <title>OCI Loadbalancer backend {hostname}</title>\n      <meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" />\n      <meta http-equiv=\"refresh\" content=\"10\" />\n      <style>\n      body {\n      background-image: url(\"bg.jpg\");\n      background-repeat: no-repeat;\n      background-size: contain;\n      background-position: center;\n      }\n      h1 {\n      text-align: center;\n      width: 100%;\n      }\n      </style>\n      </head>\n      <body>\n      <h1>OCI Regional Subnet Loadbalancer Backend {hostname}</h1>\n      </body>\n      </html>\n\nruncmd:\n  # Enable nginx\n  - sudo systemctl enable nginx.service\n  - sudo cp -v /usr/share/nginx/html/index1.html /usr/share/nginx/html/index.html\n  - sudo sed -i \"s/{hostname}/$(hostname)/g\" /usr/share/nginx/html/index.html\n  - sudo systemctl start nginx.service\n  # Set Firewall Rules\n  - sudo firewall-offline-cmd  --add-port=80/tcp\n  - sudo systemctl restart firewalld\n  # Add additional environment information because append does not appear to work in write_file\n  - sudo bash -c \"echo 'source /etc/.bashrc' >> /etc/bashrc\"\n\nfinal_message: \"**** The system is finally up, after $UPTIME seconds ****\"\n"
      },
      "block_storage_volume_ids": [],
      "object_storage_bucket_ids": [],
      "autonomous_database_ids": [],
      "preserve_boot_volume": false,
      "is_pv_encryption_in_transit_enabled": false,
      "subnet": "okit-sn001",
      "block_storage_volumes": [],
      "virtual_cloud_network": "okit-sn001",
      "primary_vnic": {
        "subnet_id": "okit.undefined.d3967bc6-40e8-42d3-adaf-9c5f374bca0b",
        "hostname_label": "nginx004",
        "assign_public_ip": true,
        "skip_source_dest_check": false,
        "nsg_ids": []
      },
      "name": "nginx-server-04"
    }
  ],
  "internet_gateways": [
    {
      "id": "okit.undefined.5aa22dc1-f626-4b67-800b-8c22ae549d05",
      "freeform_tags": {},
      "defined_tags": {},
      "display_name": "okit-ig001",
      "compartment_id": "okit.compartment.87b90aa7-4c56-4800-b4d7-e404b89c6ceb",
      "vcn_id": "okit.undefined.3e3f1f86-16f6-4433-963f-b52d70ba2452",
      "enabled": true,
      "virtual_cloud_network": "okit-vcn001"
    }
  ],
  "load_balancers": [
    {
      "id": "okit.undefined.a63bb5a1-197e-4050-bb6c-351f04fdd0c9",
      "freeform_tags": {},
      "defined_tags": {},
      "display_name": "okit-lb001",
      "compartment_id": "okit.compartment.87b90aa7-4c56-4800-b4d7-e404b89c6ceb",
      "subnet_ids": [
        "okit.undefined.d3967bc6-40e8-42d3-adaf-9c5f374bca0b"
      ],
      "is_private": false,
      "shape": "100Mbps",
      "protocol": "HTTP",
      "port": "80",
      "instance_ids": [
        "okit.undefined.db39f276-9616-47db-8008-d7510e65a41e",
        "okit.undefined.00e1e3e6-edf0-4102-ab24-8a47e749c5ea",
        "okit.undefined.933abf36-5c79-44b8-9b5a-d2f544b7d9f4",
        "okit.undefined.6152088d-4dbb-4d52-bf7c-9c0a2efb5f5d"
      ],
      "ip_mode": "",
      "network_security_group_ids": [],
      "backend_policy": "ROUND_ROBIN",
      "health_checker": {
        "url_path": "/"
      },
      "subnets": [
        ""
      ],
      "instances": [],
      "parent_id": "okit.undefined.d3967bc6-40e8-42d3-adaf-9c5f374bca0b",
      "virtual_cloud_network": "okit-sn001"
    }
  ],
  "local_peering_gateways": [],
  "nat_gateways": [],
  "network_security_groups": [],
  "object_storage_buckets": [],
  "remote_peering_gateways": [],
  "route_tables": [
    {
      "id": "okit.undefined.ed178ac3-df4d-4a84-a17a-f18dab229e63",
      "freeform_tags": {},
      "defined_tags": {},
      "display_name": "okit-lb-rt",
      "compartment_id": "okit.compartment.87b90aa7-4c56-4800-b4d7-e404b89c6ceb",
      "vcn_id": "okit.undefined.3e3f1f86-16f6-4433-963f-b52d70ba2452",
      "route_rules": [
        {
          "destination_type": "CIDR_BLOCK",
          "destination": "0.0.0.0/0",
          "network_entity_id": "okit.undefined.5aa22dc1-f626-4b67-800b-8c22ae549d05",
          "target_type": "internet_gateways"
        }
      ],
      "virtual_cloud_network": "okit-vcn001",
      "name": "okit-lb-rt"
    }
  ],
  "security_lists": [
    {
      "id": "okit.undefined.a9285860-6743-44fb-bd1e-b5cff6e19fad",
      "freeform_tags": {},
      "defined_tags": {},
      "display_name": "okit-lb-sl",
      "compartment_id": "okit.compartment.87b90aa7-4c56-4800-b4d7-e404b89c6ceb",
      "vcn_id": "okit.undefined.3e3f1f86-16f6-4433-963f-b52d70ba2452",
      "egress_security_rules": [
        {
          "protocol": "all",
          "is_stateless": false,
          "destination_type": "CIDR_BLOCK",
          "destination": "0.0.0.0/0",
          "tcp_options": {
            "source_port_range": {
              "min": "",
              "max": ""
            },
            "destination_port_range": {
              "min": "",
              "max": ""
            }
          },
          "udp_options": {
            "source_port_range": {
              "min": "",
              "max": ""
            },
            "destination_port_range": {
              "min": "",
              "max": ""
            }
          },
          "icmp_options": {
            "code": "",
            "type": ""
          }
        }
      ],
      "ingress_security_rules": [
        {
          "protocol": "all",
          "is_stateless": false,
          "source_type": "CIDR_BLOCK",
          "source": "0.0.0.0/0",
          "tcp_options": {
            "source_port_range": {
              "min": "",
              "max": ""
            },
            "destination_port_range": {
              "min": "",
              "max": ""
            }
          },
          "udp_options": {
            "source_port_range": {
              "min": "",
              "max": ""
            },
            "destination_port_range": {
              "min": "",
              "max": ""
            }
          },
          "icmp_options": {
            "code": "",
            "type": ""
          }
        }
      ],
      "virtual_cloud_network": "okit-vcn001",
      "name": "okit-lb-sl"
    }
  ],
  "service_gateways": [],
  "subnets": [
    {
      "id": "okit.undefined.d3967bc6-40e8-42d3-adaf-9c5f374bca0b",
      "freeform_tags": {},
      "defined_tags": {},
      "display_name": "okit-lb-sn",
      "compartment_id": "okit.compartment.87b90aa7-4c56-4800-b4d7-e404b89c6ceb",
      "vcn_id": "okit.undefined.3e3f1f86-16f6-4433-963f-b52d70ba2452",
      "cidr_block": "10.2.0.0/24",
      "dns_label": "sn001",
      "prohibit_public_ip_on_vnic": false,
      "route_table_id": "okit.undefined.ed178ac3-df4d-4a84-a17a-f18dab229e63",
      "security_list_ids": [
        "okit.undefined.a9285860-6743-44fb-bd1e-b5cff6e19fad"
      ],
      "availability_domain": "0",
      "is_ipv6enabled": false,
      "ipv6cidr_block": "",
      "virtual_cloud_network": "okit-vcn001",
      "route_table": "",
      "security_lists": [],
      "name": "okit-lb-sn"
    }
  ],
  "virtual_cloud_networks": [
    {
      "id": "okit.undefined.3e3f1f86-16f6-4433-963f-b52d70ba2452",
      "freeform_tags": {},
      "defined_tags": {},
      "display_name": "okit-lb-vcn",
      "compartment_id": "okit.compartment.87b90aa7-4c56-4800-b4d7-e404b89c6ceb",
      "cidr_block": "10.2.0.0/16",
      "dns_label": "vcn001",
      "is_ipv6enabled": false,
      "ipv6cidr_block": "",
      "name": "okit-lb-vcn"
    }
  ]
}