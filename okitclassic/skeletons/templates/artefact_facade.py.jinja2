#!/usr/bin/python

# Copyright (c) 2020, 2024, Oracle and/or its affiliates.
# Licensed under the Universal Permissive License v 1.0 as shown at https://oss.oracle.com/licenses/upl.

"""Provide Module Description
"""

# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~#
__author__ = ["Andrew Hopkinson (Oracle Cloud Solutions A-Team)"]
__version__ = "1.0.0"
__module__ = "oci{{ model_class_name }}"
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~#


import oci

from common.okitLogging import getLogger
from facades.ociConnection import OCI{{ model_class_name }}Connection

# Configure logging
logger = getLogger()


class OCI{{ model_class_name }}s(OCI{{ model_class_name }}Connection):
    def __init__(self, config=None, configfile=None, profile=None, compartment_id=None):
        self.compartment_id = compartment_id
        self.{{ artefact_json_list }}_json = []
        super(OCI{{ model_class_name }}s, self).__init__(config=config, configfile=configfile, profile=profile)

    def list(self, compartment_id=None, filter=None):
        if compartment_id is None:
            compartment_id = self.compartment_id

        # Add filter to only return AVAILABLE Compartments
        if filter is None:
            filter = {}

        if 'lifecycle_state' not in filter:
            filter['lifecycle_state'] = 'AVAILABLE'

        {{ artefact_json_list }} = oci.pagination.list_call_get_all_results(self.client.list_{{ artefact_json_list }}, compartment_id=compartment_id).data

        # Convert to Json object
        {{ artefact_json_list }}_json = self.toJson({{ artefact_json_list }})
        logger.debug(str({{ artefact_json_list }}_json))

        # Filter results
        self.{{ artefact_json_list }}_json = self.filterJsonObjectList({{ artefact_json_list }}_json, filter)
        logger.debug(str(self.{{ artefact_json_list }}_json))

        return self.{{ artefact_json_list }}_json
