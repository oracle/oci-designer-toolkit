/*
** Copyright (c) 2020, 2024, Oracle and/or its affiliates.
** Licensed under the Universal Permissive License v 1.0 as shown at https://oss.oracle.com/licenses/upl.
*/

import OcdDocument from '../../../../OcdDocument'
import { GeneratedResourceProperties, OcdLookupProperty, ResourceAdditionElements, ResourceElementConfig, ResourceProperties } from '../../../OcdPropertyTypes'
import * as AutoGenerated from './generated/OciLoadBalancerBackend'
import { OciLoadBalancerBackendConfigs } from './configs/OciLoadBalancerBackend'

export const OciLoadBalancerBackend = ({ ocdDocument, setOcdDocument, resource, summaryTitle, onDelete }: ResourceProperties): JSX.Element => {
    const configs: ResourceElementConfig[] = OciLoadBalancerBackendConfigs.configs()
    const additionalElements: ResourceAdditionElements[] = [{jsxElement: OciInstanceId, afterElement: 'offline'}]
    return (
        <AutoGenerated.OciLoadBalancerBackend ocdDocument={ocdDocument} setOcdDocument={(ocdDocument:OcdDocument) => setOcdDocument(ocdDocument)} resource={resource} configs={configs}  additionalElements={additionalElements} summaryTitle={summaryTitle} onDelete={onDelete} />
    )
}

export const OciInstanceId = ({ ocdDocument, setOcdDocument, resource, configs, rootResource }: GeneratedResourceProperties): JSX.Element => {
    return (
        <OcdLookupProperty       ocdDocument={ocdDocument} setOcdDocument={(ocdDocument:OcdDocument) => setOcdDocument(ocdDocument)} resource={resource} config={configs.find((c) => c.id === 'instance_id')} attribute={{"provider":"oci","key":"instanceId","name":"instance_id","type":"string","subtype":"","required":false,"label":"Instance","id":"instance_id","staticLookup":false,"cacheLookup":false,"lookup":true,"lookupResource":"instance","conditional":false,"condition":{}}} rootResource={rootResource} />
    )
}
