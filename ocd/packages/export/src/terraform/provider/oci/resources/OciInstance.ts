/*
** Copyright (c) 2020, 2024, Oracle and/or its affiliates.
** Licensed under the Universal Permissive License v 1.0 as shown at https://oss.oracle.com/licenses/upl.
*/

import * as AutoGenerated from "./generated/OciInstance.js"
import { OciModelResources as Model, OciResource } from '@ocd/model'

export class OciInstance extends AutoGenerated.OciInstance {

    // Metadata / Cache - Dropdown Data Generation
    retrieveImageId = () => {
        const content = `
data "oci_core_images" "${this.terraformResourceName}Images" {
    ${this.compartmentId(this.resource)}
    filter {
       name =  "operating_system"
       values = ["${this.resource.sourceDetails?.sourceId?.split('-')[0]}"]
    }
    filter {
       name =  "operating_system_version"
       values = ["${this.resource.sourceDetails?.sourceId?.split('-')[1]}"]
    }
}

locals {
    ${this.terraformResourceName}_image_id = data.oci_core_images.${this.terraformResourceName}Images.images[0]["id"]
}
`
    return content
    }
    // Additional Locals
    generateAdditionalResourceLocals(resource: OciResource) {
        return `${resource.terraformResourceName}_private_ip = oci_core_instance.${resource.terraformResourceName}.private_ip
    ${resource.terraformResourceName}_public_ip = oci_core_instance.${resource.terraformResourceName}.public_ip
        `
    }
    // Overrides
    // User Data (userData)
    metadataUserData = (resource: Record<string, any>, rootResource: OciResource, level=0): string => {return this.isAssignMetadataUserData(resource, rootResource) ? this.generateBase64EncodedTextAttribute("user_data", resource.userData, false, level) : ''}
    isAssignMetadataUserData = (resource: Record<string, any>, rootResource: OciResource): boolean => {return this.isPropertyAssignConditionTrue(false, {}, resource, rootResource) ? this.isGenerateAttribute("user_data", resource.userData, false) : false}
}

export default OciInstance
