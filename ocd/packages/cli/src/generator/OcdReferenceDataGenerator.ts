/*
** Copyright (c) 2020, 2024, Oracle and/or its affiliates.
** Licensed under the Universal Permissive License v 1.0 as shown at https://oss.oracle.com/licenses/upl.
*/
// TODO: Remove Following
// @ts-nocheck

import fs from 'fs'
import path from 'path'
import { OcdCodeGenerator } from '@ocd/codegen'
import { OciReferenceDataQuery } from '@ocd/query'

export class OcdReferenceDataGenerator extends OcdCodeGenerator {
    constructor () {
        super()
        this.ignoreAttributes = [...this.commonElements, ...this.commonIgnoreElements]
    }

    generate(resource: string, schema) {return}
    content = (resource, schema) => {return ''}
    autoGeneratedContent = (resource, schema) => {return ''}

    writeFiles(outputDirectory: string, resource: string, force = false) {
        const outputFilename = 'OcdDefaultCache.ts'
        const resourceFilename = path.join(outputDirectory, outputFilename)
        const referenceDataQuery = new OciReferenceDataQuery()
        referenceDataQuery.query().then((results) => {
            console.debug('Reference Data')
            const content = `${this.copyright()}
${this.autoGeneratedWarning()}

import { OcdCache } from "../components/OcdCache";

export const defaultCache: OcdCache = {
    profile: 'shipped',
    region: 'all',
    dropdownData: {
        shipped: {
            all: ${JSON.stringify(results, null, 4).replaceAll('\n', '\n            ')}
        }
    }
}

export default defaultCache

`
            // console.debug('Default Cache', content)
            // console.debug('Default Cache Filename', resourceFilename)
            if (force || !fs.existsSync(resourceFilename)) {
                console.info(`Writting Resource File : ${resourceFilename}`)
                fs.writeFileSync(resourceFilename, content)
            } else {
                console.info(`Resource File already exists : ${resourceFilename}`)
            }
        })
    }
    writeResourceFiles(outputDirectory: string, resource: string, force = false) {return}
    writeGeneratedResourceFiles(outputDirectory: string, resource: string, force = false) {return}
}

export default OcdReferenceDataGenerator
// module.exports = { OcdReferenceDataGenerator: OcdReferenceDataGenerator }
