/*
** Copyright (c) 2020, 2024, Oracle and/or its affiliates.
** Licensed under the Universal Permissive License v 1.0 as shown at https://oss.oracle.com/licenses/upl.
*/

import { OcdResources } from "../../../OcdDesign.js"
import { OciVcn } from "./OciVcn.js"
import * as AutoGenerated from "./generated/OciDhcpOptions.js"

export interface OciDhcpOptions extends AutoGenerated.OciDhcpOptions {}

export namespace OciDhcpOptions {
    export namespace Options {
        export interface Options extends AutoGenerated.OciDhcpOptions.Options.Options {}
        export function newOptions(): Options {return AutoGenerated.OciDhcpOptions.Options.newOptions()}
        
    }
    export function newResource(type?: string): OciDhcpOptions {
        const resource = {
            ...AutoGenerated.OciDhcpOptions.newResource('dhcp_options'),
        }
        return resource
    }
    export function cloneResource(resource: OciDhcpOptions, type?: string): OciDhcpOptions {
        return AutoGenerated.OciDhcpOptions.cloneResource(resource, 'dhcp_options') as OciDhcpOptions
    }
    export function allowedParentTypes(): string[] {
        return ['Vcn']
    }
    export function getParentId(resource: OciDhcpOptions): string {
        const parentId = resource.vcnId !== '' ? resource.vcnId as string  : resource.compartmentId as string
        return parentId
    }
    export function setParentId(resource: OciDhcpOptions, parentId: string): OciDhcpOptions {
        resource.vcnId = parentId
        return resource
    }
    export function getConnectionIds(resource: OciDhcpOptions, allResources: OcdResources): string[] {
        // This List of Ids does not include the Parent Id or Compartment Id
        let associationIds: string[] = []
        return associationIds
    }
    export function addDefaultOptions(resource: OciDhcpOptions, vcn: OciVcn): void {
        if (resource.options === undefined) resource.options = []
        resource.options.push(
            {
                type: "SearchDomain",
                serverType: "",
                searchDomainNames: [`${vcn.dnsLabel}.oraclevcn.com`],
                customDnsServers: []
            }
        )
    }
}

export class OciDhcpOptionsClient extends AutoGenerated.OciDhcpOptionsClient {
    static new(): OciDhcpOptions {
        return OciDhcpOptions.newResource()
    }
    static clone(resource: OciDhcpOptions): OciDhcpOptions {
        return OciDhcpOptions.cloneResource(resource)
    }
}

export default OciDhcpOptionsClient
