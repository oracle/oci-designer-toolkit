/*
** Copyright (c) 2020, 2024, Oracle and/or its affiliates.
** Licensed under the Universal Permissive License v 1.0 as shown at https://oss.oracle.com/licenses/upl.
*/

import { OcdResources } from "../../../OcdDesign.js"
import * as AutoGenerated from "./generated/OciUser.js"

export interface OciUser extends AutoGenerated.OciUser {}

export namespace OciUser {
    
    export function newResource(type?: string): OciUser {
        const resource = {
            ...AutoGenerated.OciUser.newResource('user'),
        }
        return resource
    }
    export function cloneResource(resource: OciUser, type?: string): OciUser {
        return AutoGenerated.OciUser.cloneResource(resource, 'user') as OciUser
    }
    export function allowedParentTypes(): string[] {
        return []
    }
    export function getParentId(resource: OciUser): string {
        const parentId = resource.compartmentId
        return parentId
    }
    export function setParentId(resource: OciUser, parentId: string): OciUser {
        return resource
    }
    export function getConnectionIds(resource: OciUser, allResources: OcdResources): string[] {
        // This List of Ids does not include the Parent Id or Compartment Id
        let associationIds: string[] = []
        return associationIds
    }
    export function getGroupIds(resource: OciUser, allResources: OcdResources): string[] {
        return allResources.user_group_membership ? allResources.user_group_membership.filter((u) => u.userId === resource.id).map((u) => u.groupId) : []
    }
}

export class OciUserClient extends AutoGenerated.OciUserClient {
    static new(): OciUser {
        return OciUser.newResource()
    }
    static clone(resource: OciUser): OciUser {
        return OciUser.cloneResource(resource)
    }
}

export default OciUserClient
