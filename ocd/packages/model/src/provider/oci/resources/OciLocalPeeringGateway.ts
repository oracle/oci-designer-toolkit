/*
** Copyright (c) 2020, 2024, Oracle and/or its affiliates.
** Licensed under the Universal Permissive License v 1.0 as shown at https://oss.oracle.com/licenses/upl.
*/

import { OcdResources } from "../../../OcdDesign.js"
import * as AutoGenerated from "./generated/OciLocalPeeringGateway.js"

export interface OciLocalPeeringGateway extends AutoGenerated.OciLocalPeeringGateway {}

export namespace OciLocalPeeringGateway {
    
    export function newResource(type?: string): OciLocalPeeringGateway {
        const resource = {
            ...AutoGenerated.OciLocalPeeringGateway.newResource('local_peering_gateway'),
        }
        return resource
    }
    export function cloneResource(resource: OciLocalPeeringGateway, type?: string): OciLocalPeeringGateway {
        return AutoGenerated.OciLocalPeeringGateway.cloneResource(resource, 'local_peering_gateway') as OciLocalPeeringGateway
    }
    export function allowedParentTypes(): string[] {
        return ['Vcn']
    }
    export function getParentId(resource: OciLocalPeeringGateway): string {
        const parentId = resource.vcnId !== '' ? resource.vcnId as string  : resource.compartmentId as string
        return parentId
    }
    export function setParentId(resource: OciLocalPeeringGateway, parentId: string): OciLocalPeeringGateway {
        resource.vcnId = parentId
        return resource
    }
    export function getConnectionIds(resource: OciLocalPeeringGateway, allResources: OcdResources): string[] {
        // This List of Ids does not include the Parent Id or Compartment Id
        let associationIds: string[] = []
        if (resource.routeTableId && resource.routeTableId !== '') associationIds = [...associationIds, resource.routeTableId]
        if (resource.peerId && resource.peerId !== '') associationIds = [...associationIds, resource.peerId]
        return associationIds
    }
}

export class OciLocalPeeringGatewayClient extends AutoGenerated.OciLocalPeeringGatewayClient {
    static new(): OciLocalPeeringGateway {
        return OciLocalPeeringGateway.newResource()
    }
    static clone(resource: OciLocalPeeringGateway): OciLocalPeeringGateway {
        return OciLocalPeeringGateway.cloneResource(resource)
    }
}

export default OciLocalPeeringGatewayClient
