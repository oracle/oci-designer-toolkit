/*
** Copyright (c) 2020, 2024, Oracle and/or its affiliates.
** Licensed under the Universal Permissive License v 1.0 as shown at https://oss.oracle.com/licenses/upl.
*/

import { OcdResources } from "../../../OcdDesign.js"
import * as AutoGenerated from "./generated/OciAutonomousDatabase.js"

export interface OciAutonomousDatabase extends AutoGenerated.OciAutonomousDatabase {}

export namespace OciAutonomousDatabase {

    // export namespace ResourcePoolSummary {
    //     export interface ResourcePoolSummary extends AutoGenerated.OciAutonomousDatabase.ResourcePoolSummary.ResourcePoolSummary {}
    //     export function newResourcePoolSummary(): ResourcePoolSummary {return AutoGenerated.OciAutonomousDatabase.ResourcePoolSummary.newResourcePoolSummary()}
    // }
    
    export function newResource(type?: string): OciAutonomousDatabase {
        const resource = {
            ...AutoGenerated.OciAutonomousDatabase.newResource('autonomous_database'),
        }
        return resource
    }
    export function cloneResource(resource: OciAutonomousDatabase, type?: string): OciAutonomousDatabase {
        return AutoGenerated.OciAutonomousDatabase.cloneResource(resource, 'autonomous_database') as OciAutonomousDatabase
    }
    export function allowedParentTypes(): string[] {
        return ['Subnet']
    }
    export function getParentId(resource: OciAutonomousDatabase): string {
        const parentId = resource.subnetId !== '' ? resource.subnetId as string  : resource.compartmentId as string
        return parentId
    }
    export function setParentId(resource: OciAutonomousDatabase, parentId: string): OciAutonomousDatabase {
        resource.subnetId = parentId
        return resource
    }
    export function getConnectionIds(resource: OciAutonomousDatabase, allResources: OcdResources): string[] {
        // This List of Ids does not include the Parent Id or Compartment Id
        let associationIds: string[] = []
        if (resource.vaultId)  associationIds = [...associationIds, resource.vaultId]
        if (resource.kmsKeyId) associationIds = [...associationIds, resource.kmsKeyId]
        if (resource.secretId) associationIds = [...associationIds, resource.secretId]
        return associationIds
    }
}

export class OciAutonomousDatabaseClient extends AutoGenerated.OciAutonomousDatabaseClient {
    static new(): OciAutonomousDatabase {
        return OciAutonomousDatabase.newResource()
    }
    static clone(resource: OciAutonomousDatabase): OciAutonomousDatabase {
        return OciAutonomousDatabase.cloneResource(resource)
    }
}

export default OciAutonomousDatabaseClient
