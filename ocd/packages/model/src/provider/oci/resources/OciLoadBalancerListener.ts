/*
** Copyright (c) 2020, 2024, Oracle and/or its affiliates.
** Licensed under the Universal Permissive License v 1.0 as shown at https://oss.oracle.com/licenses/upl.
*/

import { OcdResources } from "../../../OcdDesign.js"
import * as AutoGenerated from "./generated/OciLoadBalancerListener.js"

export interface OciLoadBalancerListener extends AutoGenerated.OciLoadBalancerListener {}

export namespace OciLoadBalancerListener {
    
    export function newResource(type?: string): OciLoadBalancerListener {
        const resource = {
            ...AutoGenerated.OciLoadBalancerListener.newResource('load_balancer_listener'),
        }
        return resource
    }
    export function cloneResource(resource: OciLoadBalancerListener, type?: string): OciLoadBalancerListener {
        return AutoGenerated.OciLoadBalancerListener.cloneResource(resource, 'load_balancer_listener') as OciLoadBalancerListener
    }
    export function allowedParentTypes(): string[] {
        return ['LoadBalancer']
    }
    export function getParentId(resource: OciLoadBalancerListener): string {
        const parentId = resource.loadBalancerId !== '' ? resource.loadBalancerId : resource.compartmentId
        return parentId
    }
    export function setParentId(resource: OciLoadBalancerListener, parentId: string): OciLoadBalancerListener {
        resource.loadBalancerId = parentId
        return resource
    }
    export function getConnectionIds(resource: OciLoadBalancerListener, allResources: OcdResources): string[] {
        // This List of Ids does not include the Parent Id or Compartment Id
        let associationIds: string[] = []
        associationIds = [...associationIds, resource.defaultBackendSetName]
        return associationIds
    }
}

export class OciLoadBalancerListenerClient extends AutoGenerated.OciLoadBalancerListenerClient {
    static new(): OciLoadBalancerListener {
        return OciLoadBalancerListener.newResource()
    }
    static clone(resource: OciLoadBalancerListener): OciLoadBalancerListener {
        return OciLoadBalancerListener.cloneResource(resource)
    }
}

export default OciLoadBalancerListenerClient
