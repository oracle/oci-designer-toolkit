/*
** Copyright (c) 2020, 2024, Oracle and/or its affiliates.
** Licensed under the Universal Permissive License v 1.0 as shown at https://oss.oracle.com/licenses/upl.
*/

import { OcdResources } from "../../../OcdDesign.js"
import { OciVcn } from "./OciVcn.js"
import * as AutoGenerated from "./generated/OciSecurityList.js"

export interface OciSecurityList extends AutoGenerated.OciSecurityList {}

export namespace OciSecurityList {
    export namespace EgressSecurityRules {
        export interface EgressSecurityRules extends AutoGenerated.OciSecurityList.EgressSecurityRules.EgressSecurityRules {}
        export function newEgressSecurityRules(): EgressSecurityRules {return AutoGenerated.OciSecurityList.EgressSecurityRules.newEgressSecurityRules()}
        export namespace IcmpOptions {
            export interface IcmpOptions extends AutoGenerated.OciSecurityList.EgressSecurityRules.IcmpOptions.IcmpOptions {}
            export function newIcmpOptions(): IcmpOptions {return AutoGenerated.OciSecurityList.EgressSecurityRules.IcmpOptions.newIcmpOptions()}
            
        }
        export namespace TcpOptions {
            export interface TcpOptions extends AutoGenerated.OciSecurityList.EgressSecurityRules.TcpOptions.TcpOptions {}
            export function newTcpOptions(): TcpOptions {return AutoGenerated.OciSecurityList.EgressSecurityRules.TcpOptions.newTcpOptions()}
            export namespace SourcePortRange {
                export interface SourcePortRange extends AutoGenerated.OciSecurityList.EgressSecurityRules.TcpOptions.SourcePortRange.SourcePortRange {}
                export function newSourcePortRange(): SourcePortRange {return AutoGenerated.OciSecurityList.EgressSecurityRules.TcpOptions.SourcePortRange.newSourcePortRange()}
                
            }
        }
        export namespace UdpOptions {
            export interface UdpOptions extends AutoGenerated.OciSecurityList.EgressSecurityRules.UdpOptions.UdpOptions {}
            export function newUdpOptions(): UdpOptions {return AutoGenerated.OciSecurityList.EgressSecurityRules.UdpOptions.newUdpOptions()}
            export namespace SourcePortRange {
                export interface SourcePortRange extends AutoGenerated.OciSecurityList.EgressSecurityRules.UdpOptions.SourcePortRange.SourcePortRange {}
                export function newSourcePortRange(): SourcePortRange {return AutoGenerated.OciSecurityList.EgressSecurityRules.UdpOptions.SourcePortRange.newSourcePortRange()}
                
            }
        }
    }
    export namespace IngressSecurityRules {
        export interface IngressSecurityRules extends AutoGenerated.OciSecurityList.IngressSecurityRules.IngressSecurityRules {}
        export function newIngressSecurityRules(): IngressSecurityRules {return AutoGenerated.OciSecurityList.IngressSecurityRules.newIngressSecurityRules()}
        export namespace IcmpOptions {
            export interface IcmpOptions extends AutoGenerated.OciSecurityList.IngressSecurityRules.IcmpOptions.IcmpOptions {}
            export function newIcmpOptions(): IcmpOptions {return AutoGenerated.OciSecurityList.IngressSecurityRules.IcmpOptions.newIcmpOptions()}
            
        }
        export namespace TcpOptions {
            export interface TcpOptions extends AutoGenerated.OciSecurityList.IngressSecurityRules.TcpOptions.TcpOptions {}
            export function newTcpOptions(): TcpOptions {return AutoGenerated.OciSecurityList.IngressSecurityRules.TcpOptions.newTcpOptions()}
            export namespace SourcePortRange {
                export interface SourcePortRange extends AutoGenerated.OciSecurityList.IngressSecurityRules.TcpOptions.SourcePortRange.SourcePortRange {}
                export function newSourcePortRange(): SourcePortRange {return AutoGenerated.OciSecurityList.IngressSecurityRules.TcpOptions.SourcePortRange.newSourcePortRange()}
                
            }
        }
        export namespace UdpOptions {
            export interface UdpOptions extends AutoGenerated.OciSecurityList.IngressSecurityRules.UdpOptions.UdpOptions {}
            export function newUdpOptions(): UdpOptions {return AutoGenerated.OciSecurityList.IngressSecurityRules.UdpOptions.newUdpOptions()}
            export namespace SourcePortRange {
                export interface SourcePortRange extends AutoGenerated.OciSecurityList.IngressSecurityRules.UdpOptions.SourcePortRange.SourcePortRange {}
                export function newSourcePortRange(): SourcePortRange {return AutoGenerated.OciSecurityList.IngressSecurityRules.UdpOptions.SourcePortRange.newSourcePortRange()}
                
            }
        }
    }
    export function newResource(type?: string): OciSecurityList {
        const resource = {
            ...AutoGenerated.OciSecurityList.newResource('security_list'),
        }
        return resource
    }
    export function cloneResource(resource: OciSecurityList, type?: string): OciSecurityList {
        return AutoGenerated.OciSecurityList.cloneResource(resource, 'security_list') as OciSecurityList
    }
    export function allowedParentTypes(): string[] {
        return ['Vcn']
    }
    export function getParentId(resource: OciSecurityList): string {
        const parentId = resource.vcnId !== '' ? resource.vcnId as string  : resource.compartmentId
        return parentId
    }
    export function setParentId(resource: OciSecurityList, parentId: string): OciSecurityList {
        resource.vcnId = parentId
        return resource
    }
    export function getConnectionIds(resource: OciSecurityList, allResources: OcdResources): string[] {
        // This List of Ids does not include the Parent Id or Compartment Id
        let associationIds: string[] = []
        return associationIds
    }
    export function addDefaultRules(resource: OciSecurityList, vcn: OciVcn): void {
        // Add Egress Rule
        if (resource.egressSecurityRules === undefined) resource.egressSecurityRules = []
        resource.egressSecurityRules.push(
            {
                "destination": "0.0.0.0/0",
                "destinationType": "CIDR_BLOCK",
                "icmpOptions": undefined,
                "stateless": false,
                "protocol": "all",
                "tcpOptions": undefined,
                "udpOptions": undefined,
                "description": "Default All Egress Rule"
            }
        );
        // Ingress Rules
        if (resource.ingressSecurityRules === undefined) resource.ingressSecurityRules = []
        resource.ingressSecurityRules.push(
            {
                "icmpOptions": undefined,
                "stateless": false,
                "protocol": "6",
                "source": "0.0.0.0/0",
                "sourceType": "CIDR_BLOCK",
                "tcpOptions": {
                    "max": 22,
                    "min": 22,
                    "sourcePortRange": {
                        "min": 0,
                        "max": 0
                    }
                },
                "udpOptions": undefined,
                "description": " Default SSH Ingress Rule"
            }
        );
        resource.ingressSecurityRules.push(
            {
                "icmpOptions": {
                    "code": 4,
                    "type": 3
                },
                "stateless": false,
                "protocol": "1",
                "source": "0.0.0.0/0",
                "sourceType": "CIDR_BLOCK",
                "tcpOptions": undefined,
                "udpOptions": undefined,
                "description": "Default Ingress Rule"
            }
        );
        resource.ingressSecurityRules.push(
            {
                "icmpOptions": {
                    "code": undefined,
                    "type": 3
                },
                "stateless": false,
                "protocol": "1",
                "source": vcn.cidrBlocks && vcn.cidrBlocks.length > 0 ? vcn.cidrBlocks[0] : '',
                "sourceType": "CIDR_BLOCK",
                "tcpOptions": undefined,
                "udpOptions": undefined,
                "description": "Default VCN Access Ingress Rule"
            }
        );
    }
}

export class OciSecurityListClient extends AutoGenerated.OciSecurityListClient {
    static new(): OciSecurityList {
        return OciSecurityList.newResource()
    }
    static clone(resource: OciSecurityList): OciSecurityList {
        return OciSecurityList.cloneResource(resource)
    }
}

export default OciSecurityListClient
