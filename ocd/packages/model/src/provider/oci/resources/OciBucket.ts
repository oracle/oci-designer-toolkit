/*
** Copyright (c) 2020, 2024, Oracle and/or its affiliates.
** Licensed under the Universal Permissive License v 1.0 as shown at https://oss.oracle.com/licenses/upl.
*/

import { OcdResources } from "../../../OcdDesign.js"
import * as AutoGenerated from "./generated/OciBucket.js"

export interface OciBucket extends AutoGenerated.OciBucket {}

export namespace OciBucket {
    export namespace RetentionRules {
        export interface RetentionRules extends AutoGenerated.OciBucket.RetentionRules.RetentionRules {}
        export function newRetentionRules(): RetentionRules {return AutoGenerated.OciBucket.RetentionRules.newRetentionRules()}
        export namespace Duration {
            export interface Duration extends AutoGenerated.OciBucket.RetentionRules.Duration.Duration {}
            export function newDuration(): Duration {return AutoGenerated.OciBucket.RetentionRules.Duration.newDuration()}
            
        }
    }
    export function newResource(type?: string): OciBucket {
        const resource = {
            ...AutoGenerated.OciBucket.newResource('bucket'),
        }
        return resource
    }
    export function cloneResource(resource: OciBucket, type?: string): OciBucket {
        return AutoGenerated.OciBucket.cloneResource(resource, 'bucket') as OciBucket
    }
    export function allowedParentTypes(): string[] {
        return []
    }
    export function getParentId(resource: OciBucket): string {
        const parentId = resource.compartmentId
        return parentId
    }
    export function setParentId(resource: OciBucket, parentId: string): OciBucket {
        return resource
    }
    export function getConnectionIds(resource: OciBucket, allResources: OcdResources): string[] {
        // This List of Ids does not include the Parent Id or Compartment Id
        let associationIds: string[] = []
        return associationIds
    }
}

export class OciBucketClient extends AutoGenerated.OciBucketClient {
    static new(): OciBucket {
        return OciBucket.newResource()
    }
    static clone(resource: OciBucket): OciBucket {
        return OciBucket.cloneResource(resource)
    }
}

export default OciBucketClient
