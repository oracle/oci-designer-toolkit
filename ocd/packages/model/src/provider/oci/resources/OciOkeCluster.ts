/*
** Copyright (c) 2020, 2024, Oracle and/or its affiliates.
** Licensed under the Universal Permissive License v 1.0 as shown at https://oss.oracle.com/licenses/upl.
*/

import { OcdResources } from "../../../OcdDesign.js"
import * as AutoGenerated from "./generated/OciOkeCluster.js"

export interface OciOkeCluster extends AutoGenerated.OciOkeCluster {}

export namespace OciOkeCluster {
    export namespace ClusterPodNetworkOptions {
        export interface ClusterPodNetworkOptions extends AutoGenerated.OciOkeCluster.ClusterPodNetworkOptions.ClusterPodNetworkOptions {}
        export function newClusterPodNetworkOptions(): ClusterPodNetworkOptions {return AutoGenerated.OciOkeCluster.ClusterPodNetworkOptions.newClusterPodNetworkOptions()}
        
    }
    export namespace EndpointConfig {
        export interface EndpointConfig extends AutoGenerated.OciOkeCluster.EndpointConfig.EndpointConfig {}
        export function newEndpointConfig(): EndpointConfig {return AutoGenerated.OciOkeCluster.EndpointConfig.newEndpointConfig()}
        
    }
    export namespace ImagePolicyConfig {
        export interface ImagePolicyConfig extends AutoGenerated.OciOkeCluster.ImagePolicyConfig.ImagePolicyConfig {}
        export function newImagePolicyConfig(): ImagePolicyConfig {return AutoGenerated.OciOkeCluster.ImagePolicyConfig.newImagePolicyConfig()}
        export namespace KeyDetails {
            export interface KeyDetails extends AutoGenerated.OciOkeCluster.ImagePolicyConfig.KeyDetails.KeyDetails {}
            export function newKeyDetails(): KeyDetails {return AutoGenerated.OciOkeCluster.ImagePolicyConfig.KeyDetails.newKeyDetails()}
            
        }
    }
    export namespace Options {
        export interface Options extends AutoGenerated.OciOkeCluster.Options.Options {}
        export function newOptions(): Options {return AutoGenerated.OciOkeCluster.Options.newOptions()}
        export namespace AddOns {
            export interface AddOns extends AutoGenerated.OciOkeCluster.Options.AddOns.AddOns {}
            export function newAddOns(): AddOns {return AutoGenerated.OciOkeCluster.Options.AddOns.newAddOns()}
            
        }
        export namespace AdmissionControllerOptions {
            export interface AdmissionControllerOptions extends AutoGenerated.OciOkeCluster.Options.AdmissionControllerOptions.AdmissionControllerOptions {}
            export function newAdmissionControllerOptions(): AdmissionControllerOptions {return AutoGenerated.OciOkeCluster.Options.AdmissionControllerOptions.newAdmissionControllerOptions()}
            
        }
        export namespace KubernetesNetworkConfig {
            export interface KubernetesNetworkConfig extends AutoGenerated.OciOkeCluster.Options.KubernetesNetworkConfig.KubernetesNetworkConfig {}
            export function newKubernetesNetworkConfig(): KubernetesNetworkConfig {return AutoGenerated.OciOkeCluster.Options.KubernetesNetworkConfig.newKubernetesNetworkConfig()}
            
        }
        export namespace PersistentVolumeConfig {
            export interface PersistentVolumeConfig extends AutoGenerated.OciOkeCluster.Options.PersistentVolumeConfig.PersistentVolumeConfig {}
            export function newPersistentVolumeConfig(): PersistentVolumeConfig {return AutoGenerated.OciOkeCluster.Options.PersistentVolumeConfig.newPersistentVolumeConfig()}
            
        }
        export namespace ServiceLbConfig {
            export interface ServiceLbConfig extends AutoGenerated.OciOkeCluster.Options.ServiceLbConfig.ServiceLbConfig {}
            export function newServiceLbConfig(): ServiceLbConfig {return AutoGenerated.OciOkeCluster.Options.ServiceLbConfig.newServiceLbConfig()}
            
        }
    }
    export function newResource(type?: string): OciOkeCluster {
        const resource = {
            ...AutoGenerated.OciOkeCluster.newResource('oke_cluster'),
        }
        return resource
    }
    export function cloneResource(resource: OciOkeCluster, type?: string): OciOkeCluster {
        return AutoGenerated.OciOkeCluster.cloneResource(resource, 'oke_cluster') as OciOkeCluster
    }
    export function allowedParentTypes(): string[] {
        return []
    }
    export function getParentId(resource: OciOkeCluster): string {
        const parentId = resource.compartmentId
        return parentId
    }
    export function setParentId(resource: OciOkeCluster, parentId: string): OciOkeCluster {
        return resource
    }
    export function getConnectionIds(resource: OciOkeCluster, allResources: OcdResources): string[] {
        // This List of Ids does not include the Parent Id or Compartment Id
        let associationIds: string[] = []
        return associationIds
    }
}

export class OciOkeClusterClient extends AutoGenerated.OciOkeClusterClient {
    static new(): OciOkeCluster {
        return OciOkeCluster.newResource()
    }
    static clone(resource: OciOkeCluster): OciOkeCluster {
        return OciOkeCluster.cloneResource(resource)
    }
}

export default OciOkeClusterClient
