/*
** Copyright (c) 2020, 2024, Oracle and/or its affiliates.
** Licensed under the Universal Permissive License v 1.0 as shown at https://oss.oracle.com/licenses/upl.
*/

import { OcdResources } from "../../../OcdDesign.js"
import * as AutoGenerated from "./generated/OciLoadBalancer.js"
import { OciLoadBalancerBackendSet } from "./OciLoadBalancerBackendSet.js"
import { OciLoadBalancerListener } from "./OciLoadBalancerListener.js"

export interface OciLoadBalancer extends AutoGenerated.OciLoadBalancer {
    listeners?: OciLoadBalancerListener[] // Used to define type for query
    backendSets?: OciLoadBalancerBackendSet[] // Used to define type for query
}

export namespace OciLoadBalancer {
    export namespace ShapeDetails {
        export interface ShapeDetails extends AutoGenerated.OciLoadBalancer.ShapeDetails.ShapeDetails {}
        export function newShapeDetails(): ShapeDetails {return AutoGenerated.OciLoadBalancer.ShapeDetails.newShapeDetails()}
        
    }
    export function newResource(type?: string): OciLoadBalancer {
        const resource = {
            ...AutoGenerated.OciLoadBalancer.newResource('load_balancer'),
        }
        return resource
    }
    export function cloneResource(resource: OciLoadBalancer, type?: string): OciLoadBalancer {
        return AutoGenerated.OciLoadBalancer.cloneResource(resource, 'load_balancer') as OciLoadBalancer
    }
    export function allowedParentTypes(): string[] {
        return ['Subnet']
    }
    export function getParentId(resource: OciLoadBalancer): string {
        const parentId = resource.subnetIds.length && resource.subnetIds[0] !== '' ? resource.subnetIds[0] as string  : resource.compartmentId as string
        return parentId
    }
    export function setParentId(resource: OciLoadBalancer, parentId: string): OciLoadBalancer {
        resource.subnetIds[0] = parentId
        return resource
    }
    export function getConnectionIds(resource: OciLoadBalancer, allResources: OcdResources): string[] {
        // This List of Ids does not include the Parent Id or Compartment Id
        let associationIds: string[] = []
        associationIds = [...associationIds, ...resource.subnetIds.slice(1)]
        if (resource.networkSecurityGroupIds) associationIds = [...associationIds, ...resource.networkSecurityGroupIds ? resource.networkSecurityGroupIds : []]
        return associationIds
    }
}

export class OciLoadBalancerClient extends AutoGenerated.OciLoadBalancerClient {
    static new(): OciLoadBalancer {
        return OciLoadBalancer.newResource()
    }
    static clone(resource: OciLoadBalancer): OciLoadBalancer {
        return OciLoadBalancer.cloneResource(resource)
    }
}

export default OciLoadBalancerClient
