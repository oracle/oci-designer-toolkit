/*
** Copyright (c) 2020, 2024, Oracle and/or its affiliates.
** Licensed under the Universal Permissive License v 1.0 as shown at https://oss.oracle.com/licenses/upl.
*/

import { OcdResources } from "../../../OcdDesign.js"
import * as AutoGenerated from "./generated/OciIpsec.js"

export interface OciIpsec extends AutoGenerated.OciIpsec {}

export namespace OciIpsec {
    
    export function newResource(type?: string): OciIpsec {
        const resource = {
            ...AutoGenerated.OciIpsec.newResource('ipsec'),
        }
        return resource
    }
    export function cloneResource(resource: OciIpsec, type?: string): OciIpsec {
        return AutoGenerated.OciIpsec.cloneResource(resource, 'ipsec') as OciIpsec
    }
    export function allowedParentTypes(): string[] {
        return []
    }
    export function getParentId(resource: OciIpsec): string {
        const parentId = resource.compartmentId
        return parentId
    }
    export function setParentId(resource: OciIpsec, parentId: string): OciIpsec {
        return resource
    }
    export function getConnectionIds(resource: OciIpsec, allResources: OcdResources): string[] {
        // This List of Ids does not include the Parent Id or Compartment Id
        let associationIds: string[] = []
        if (resource.drgId && resource.drgId !== '') associationIds = [...associationIds, resource.drgId]
        if (resource.cpeId && resource.cpeId !== '') associationIds = [...associationIds, resource.cpeId]
        return associationIds
    }
}

export class OciIpsecClient extends AutoGenerated.OciIpsecClient {
    static new(): OciIpsec {
        return OciIpsec.newResource()
    }
    static clone(resource: OciIpsec): OciIpsec {
        return OciIpsec.cloneResource(resource)
    }
}

export default OciIpsecClient
